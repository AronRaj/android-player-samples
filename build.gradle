// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.8.+'
    classpath 'de.undercouch:gradle-download-task:0.+'
  }
}

println "Using Android Native Player version: $anpVersion"

project.ext {
  imaAndroidSdkJarFileName = "ima-android-sdk-beta5.jar"
}

// Automatically download the Google IMA third party zip file and
// extract the jar to satisfy the dependency.
def downloadIMA() {
  def libs = "${rootProject.projectDir}/libs"
  def libsdk = libs + '/' + imaAndroidSdkJarFileName

  // Conditionally download the Google IMA SDK during
  // configuration.  This step is done once.  The 'clean' task will not
  // remove libraries from /libs/.
  File dep = file(libsdk)
  if (!dep.exists()) {
    apply plugin: 'download-task'

    println "Downloading the Google IMA SDK..."

    download {
      src 'https://dl.google.com/in-stream/google_sdk/android/v3/' + imaAndroidSdkJarFileName
      dest file(libs)
    }
  }
}

subprojects {
  apply plugin: 'android'

  repositories {
    mavenCentral()
    mavenLocal()
    maven { url '/Users/bhnath/.m2/repository' }
    maven {
      url 'http://solutions.brightcove.com/bcls/maven/repo'
    }

    flatDir {
        dirs '../libs'
    }
  }

  android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
      minSdkVersion 11
      targetSdkVersion 19
    }
  }

  dependencies {
    compile 'com.android.support:appcompat-v7:+'
    compile "com.brightcove.player:android-sdk:$anpVersion@aar"
  }

  if (project.name.contains('IMA')) {
    downloadIMA()
    dependencies {
      compile "com.brightcove.ima:android-ima-plugin:${anpVersion}@aar"
      compile files("${rootProject.projectDir}/libs/" + imaAndroidSdkJarFileName)
    }
  }

  if (project.name.contains('Widevine')) {
    dependencies {
      compile "com.brightcove.widevine:android-widevine-plugin:${anpVersion}@aar"
    }

    android {
      defaultConfig {
        minSdkVersion 11
      }
    }
  }

  if (project.name.contains('HLS')) {
    dependencies {
      compile "com.brightcove.player:android-hls-player:${anpVersion}@aar"
    }
  }

  if (project.name.contains('WebVTT')) {
    android {
      defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
      }
    }
  }

  if (project.name.contains('WebView')) {
    android {
      lintOptions {
        disable 'SetJavaScriptEnabled'
      }
    }
  }

  if (project.name.contains('Cast')) {
      dependencies {
          compile "com.brightcove.cast:android-cast-plugin:${anpVersion}@aar"
          compile 'com.google.cast:CastCompanionLibrary:1.1@aar'
          compile 'com.android.support:appcompat-v7:+'
          compile 'com.google.android.gms:play-services:+'
          compile 'com.android.support:mediarouter-v7:+'
      }
  }

  println "Processing ${project.name}"
}
