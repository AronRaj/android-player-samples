// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.7.+'
    classpath 'de.undercouch:gradle-download-task:0.2'
  }
}

println "Using Android Native Player version: $anpVersion"

project.ext {
  imaAndroidSdkJarFileName = "ima-android-sdk-beta5.jar"
}

// Automatically download the Google IMA third party zip file and
// extract the jar to satisfy the dependency.
def downloadIMA() {
  def libs = "${rootProject.projectDir}/libs"
  def libsdk = libs + '/' + imaAndroidSdkJarFileName

  // Conditionally download the Google IMA SDK during
  // configuration.  This step is done once.  The 'clean' task will not
  // remove libraries from /libs/.
  File dep = file(libsdk)
  if (!dep.exists()) {
    apply plugin: 'download-task'

    println "Downloading the Google IMA SDK..."

    download {
      src 'https://dl.google.com/in-stream/google_sdk/android/v3/' + imaAndroidSdkJarFileName
      dest file(libs)
    }
  }
}

subprojects {
  apply plugin: 'android'

  repositories {
    mavenCentral()
    maven {
      url 'http://docs.brightcove.com/en/video-cloud/maven/repo'
    }
  }

  android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
      minSdkVersion 10
      targetSdkVersion 18
    }
  }

  dependencies {
    compile 'com.android.support:appcompat-v7:+'
    compile "com.brightcove.player:android-sdk:$anpVersion"
  }

  if (project.name.contains('IMA')) {
    downloadIMA()
    dependencies {
      compile "com.brightcove.ima:android-ima-plugin:${anpVersion}"
      compile files("${rootProject.projectDir}/libs/" + imaAndroidSdkJarFileName)
    }
  }

  if (project.name.contains('Widevine')) {
    dependencies {
      compile "com.brightcove.widevine:android-widevine-plugin:${anpVersion}"
    }

    android {
      defaultConfig {
        minSdkVersion 11
      }
    }
  }

  if (project.name.contains('HLS')) {
    dependencies {
      compile "com.brightcove.player:android-hls-player:${anpVersion}"
    }
  }

  println "Processing ${project.name}"
}
